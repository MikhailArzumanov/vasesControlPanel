// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using vaseApi.Data;

#nullable disable

namespace vaseApi.Migrations {
    [DbContext(typeof(ApplicationContext))]
    [Migration("20231027041115_FirstSetOfModels")]
    partial class FirstSetOfModels {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder) {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("vaseApi.Models.Color", b => {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Commentary")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HexRepresentation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Colors");
                });

            modelBuilder.Entity("vaseApi.Models.Genus", b => {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HtmlMarkup")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MarkdownText")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Genuses");
                });

            modelBuilder.Entity("vaseApi.Models.Vase", b => {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Commentary")
                        .HasColumnType("text");

                    b.Property<int>("FlowerGenusId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("LastRepairDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("LastWatering")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("MainColorId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("MountingDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("SideColorId")
                        .HasColumnType("integer");

                    b.Property<int>("VaseCondition")
                        .HasColumnType("integer");

                    b.Property<double>("VaseWeight")
                        .HasColumnType("double precision");

                    b.Property<double>("WateredLevel")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("FlowerGenusId");

                    b.HasIndex("MainColorId");

                    b.HasIndex("SideColorId");

                    b.ToTable("Vases");
                });

            modelBuilder.Entity("vaseApi.Models.Vase", b => {
                    b.HasOne("vaseApi.Models.Genus", "FlowerGenus")
                        .WithMany()
                        .HasForeignKey("FlowerGenusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vaseApi.Models.Color", "MainColor")
                        .WithMany()
                        .HasForeignKey("MainColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vaseApi.Models.Color", "SideColor")
                        .WithMany()
                        .HasForeignKey("SideColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FlowerGenus");

                    b.Navigation("MainColor");

                    b.Navigation("SideColor");
                });
#pragma warning restore 612, 618
        }
    }
}
